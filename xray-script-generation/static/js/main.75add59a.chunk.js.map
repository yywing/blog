{"version":3,"sources":["../packages/xray-script-generation-component/src/form.js","../packages/xray-script-generation-component/src/dataForm.js","../packages/xray-script-generation-component/src/index.js","index.js"],"names":["schema","require","validate","formData","errors","transport","pass1","pass2","addError","ScriptForm","this","props","liveValidate","onSubmit","React","Component","dumpYaml","object","dump","DataForm","copyToClipboard","e","preventDefault","navigator","clipboard","writeText","alert","bind","Form","Group","controlId","Label","Control","as","rows","value","disabled","Button","type","ScriptFormWithData","state","onScriptSubmit","setState","Container","Row","Col","md","ReactDOM","render","document","getElementById"],"mappings":"0wIAIMA,EAASC,EAAQ,KAGvB,SAASC,EAASC,EAAUC,GAK1B,OAJID,EAASE,WACTF,EAASG,QAAUH,EAASI,OAC9BH,EAAOG,MAAMC,SAAS,yBAEjBJ,E,IAIYK,E,4JACnB,WACI,OAAQ,cAAC,IAAD,CAAMT,OAAQA,EAAQG,SAAUO,KAAKC,MAAMR,SAAUD,SAAUA,EAAUU,cAAY,EAACC,SAAUH,KAAKC,MAAME,e,GAFjFC,IAAMC,W,wBCT9C,SAASC,EAASC,GAEhB,OADahB,EAAQ,KACTiB,KAAKD,G,IASEE,E,kDACnB,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAIRS,gBAAkB,SAACC,GACjBA,EAAEC,iBACFC,UAAUC,UAAUC,UAAUT,EAAS,EAAKL,MAAMR,WAClDuB,MAAM,YANN,EAAKN,gBAAkB,EAAKA,gBAAgBO,KAArB,gBAFN,E,0CAWnB,WACE,OACE,eAACC,EAAA,EAAD,CAAMf,SAAUH,KAAKU,gBAArB,UACE,eAACQ,EAAA,EAAKC,MAAN,CAAYC,UAAU,+BAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,GAAG,WAAWC,KAAM,GAAIC,MAAOnB,EAASN,KAAKC,MAAMR,UAAWiC,UAAQ,OAEtF,cAACC,EAAA,EAAD,CAAQC,KAAK,SAAb,yB,GAnB8BxB,IAAMC,W,oCCVvBwB,E,kDACnB,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IACD6B,MAAQ,CACXrC,SAAU,IAGZ,EAAKsC,eAAiB,EAAKA,eAAed,KAApB,gBANL,E,kDASnB,SAAeN,GACbX,KAAKgC,SAAS,CAAEvC,SAAUkB,EAAElB,a,oBAG9B,WACE,OACE,cAACwC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,cAAC,EAAD,CAAY3C,SAAUO,KAAK8B,MAAMrC,SAAUU,SAAUH,KAAK+B,mBACtE,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,cAAC,EAAD,CAAU3C,SAAUO,KAAK8B,MAAMrC,sB,GAnBLW,IAAMC,WCHtDgC,IAASC,OACP,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.75add59a.chunk.js","sourcesContent":["import React from 'react'\n\nimport Form from \"@rjsf/core\";\n\nconst schema = require('./schema.json');\n\n\nfunction validate(formData, errors) {\n  if (formData.transport)\n  if (formData.pass1 !== formData.pass2) {\n    errors.pass2.addError(\"Passwords don't match\");\n  }\n  return errors;\n}\n\n\nexport default class ScriptForm extends React.Component {\n  render() {\n      return (<Form schema={schema} formData={this.props.formData} validate={validate} liveValidate onSubmit={this.props.onSubmit} />)\n  }\n}\n","import React from 'react'\n\nimport  Form  from 'react-bootstrap/Form';\nimport { Button } from 'react-bootstrap';\nimport ClipboardJS from 'clipboard';\n\n\nfunction dumpYaml(object){\n  const yaml = require('js-yaml');\n  return yaml.dump(object)\n}\n\nfunction loadYaml(value){\n  const yaml = require('js-yaml');\n  return yaml.load(value)\n}\n\n\nexport default class DataForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n  }\n\n  copyToClipboard = (e) => {\n    e.preventDefault();\n    navigator.clipboard.writeText(dumpYaml(this.props.formData))\n    alert(\"Success\")\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.copyToClipboard}>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Script Data</Form.Label>\n          <Form.Control as=\"textarea\" rows={50} value={dumpYaml(this.props.formData)} disabled />\n        </Form.Group>\n        <Button type=\"submit\">Copy</Button>\n      </Form>\n    )\n  }\n}\n","import React from 'react'\nimport ScriptForm from './form'\nimport DataForm from './dataForm'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nexport {ScriptForm};\n\nexport default class ScriptFormWithData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {}\n    }\n\n    this.onScriptSubmit = this.onScriptSubmit.bind(this);\n  }\n\n  onScriptSubmit(e){\n    this.setState({ formData: e.formData });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col md={6}><ScriptForm formData={this.state.formData} onSubmit={this.onScriptSubmit} /></Col>\n          <Col md={6}><DataForm formData={this.state.formData}></DataForm></Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\n\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport ScriptFormWithData from 'xray-script-generation-component';\n\n\nReactDOM.render((\n  <ScriptFormWithData />\n), document.getElementById(\"root\"));\n"],"sourceRoot":""}